version: "3.9"
services:
  api_gateway:
    container_name: api_gateway
    build:
      dockerfile: ./ivi-clone-api-gateway/Dockerfile
    ports:
      - "3111:3111"
    restart: always

  auth:
    container_name: auth
    build:
      dockerfile: ./ivi-clone-auth-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=auth_pg
    restart: always
    depends_on:
      - auth_pg

  auth_pg:
    container_name: auth_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  comments:
    container_name: comments
    build:
      dockerfile: ./ivi-clone-comments-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=comments_pg
    restart: always
    depends_on:
      - comments_pg

  comments_pg:
    container_name: comments_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: comments
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  genres:
    container_name: genres
    build:
      dockerfile: ./ivi-clone-genres-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=genres_pg
    restart: always
    depends_on:
      - genres_pg

  genres_pg:
    container_name: genres_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: general
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  movies:
    container_name: movies
    build:
      dockerfile: ./ivi-clone-movies-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=movies_pg
    restart: always
    depends_on:
      - movies_pg

  movies_pg:
    container_name: movies_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: movies
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  persons:
    container_name: persons
    build:
      dockerfile: ./ivi-clone-persons-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=persons_pg
    restart: always
    depends_on:
      - persons_pg

  persons_pg:
    container_name: persons_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: persons
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  profiles:
    container_name: profiles
    build:
      dockerfile: ./ivi-clone-profiles-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=profiles_pg
    restart: always
    depends_on:
      - profiles_pg

  profiles_pg:
    container_name: movies_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: profiles
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  roles:
    container_name: roles
    build:
      dockerfile: ./ivi-clone-roles-ms/Dockerfile
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=roles_pg
    restart: always
    depends_on:
      - roles_pg

  roles_pg:
    container_name: movies_pg
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: roles
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - '/var/lib/postgres/data:/var/lib/postgresql/data'
    ports:
      - "5432"
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.3-management
    restart: always
    ports:
      - "5672"